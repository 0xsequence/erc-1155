/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory, } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "domain_hash_1155",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
];
const _bytecode = "0x6080604052348015600f57600080fd5b5060405160953803806095833981016040819052602a916031565b6000556049565b600060208284031215604257600080fd5b5051919050565b603f8060566000396000f3fe6080604052600080fdfea264697066735822122037156843bc171e499afc64a1215611401502286696479e350818b7eaf0b20b0f64736f6c63430008120033";
const isSuperArgs = (xs) => xs.length > 1;
export class LibEIP712__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(domain_hash_1155, overrides) {
        return super.deploy(domain_hash_1155, overrides || {});
    }
    getDeployTransaction(domain_hash_1155, overrides) {
        return super.getDeployTransaction(domain_hash_1155, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
LibEIP712__factory.bytecode = _bytecode;
LibEIP712__factory.abi = _abi;

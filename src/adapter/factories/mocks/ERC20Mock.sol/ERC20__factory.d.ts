import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { ERC20, ERC20Interface } from "../../../mocks/ERC20Mock.sol/ERC20";
declare type ERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ERC20__factory extends ContractFactory {
    constructor(...args: ERC20ConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ERC20>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): ERC20;
    connect(signer: Signer): ERC20__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506105ad806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146100ed578063a457c2d714610123578063a9059cbb14610136578063dd62ed3e1461014957600080fd5b8063095ea7b31461008d57806318160ddd146100b557806323b872dd146100c757806339509351146100da575b600080fd5b6100a061009b366004610467565b61018f565b60405190151581526020015b60405180910390f35b6002545b6040519081526020016100ac565b6100a06100d5366004610491565b6101a6565b6100a06100e8366004610467565b610205565b6100b96100fb3660046104cd565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100a0610131366004610467565b610249565b6100a0610144366004610467565b61028d565b6100b96101573660046104ef565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b600061019c33848461029a565b5060015b92915050565b60006101b3848484610349565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600160209081526040808320338085529252909120546101fb9186916101f6908690610551565b61029a565b5060019392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161019c9185906101f6908690610564565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161019c9185906101f6908690610551565b600061019c338484610349565b73ffffffffffffffffffffffffffffffffffffffff82166102ba57600080fd5b73ffffffffffffffffffffffffffffffffffffffff83166102da57600080fd5b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff821661036957600080fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260408120805483929061039e908490610551565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260208190526040812080548392906103d8908490610564565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161033c91815260200190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461046257600080fd5b919050565b6000806040838503121561047a57600080fd5b6104838361043e565b946020939093013593505050565b6000806000606084860312156104a657600080fd5b6104af8461043e565b92506104bd6020850161043e565b9150604084013590509250925092565b6000602082840312156104df57600080fd5b6104e88261043e565b9392505050565b6000806040838503121561050257600080fd5b61050b8361043e565b91506105196020840161043e565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156101a0576101a0610522565b808201808211156101a0576101a061052256fea264697066735822122004f238f212c507affa391daf77fc2bc94ff505ad9b1db74c5f9b57a477cef4d564736f6c63430008120033";
    static readonly abi: ({
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): ERC20Interface;
    static connect(address: string, signerOrProvider: Signer | Provider): ERC20;
}
export {};

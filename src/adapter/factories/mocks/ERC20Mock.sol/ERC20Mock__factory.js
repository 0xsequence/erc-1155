/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory } from "ethers";
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "_tokens",
                type: "address[]",
            },
            {
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                internalType: "uint256[]",
                name: "_amounts",
                type: "uint256[]",
            },
        ],
        name: "batchTransfer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "subtractedValue",
                type: "uint256",
            },
        ],
        name: "decreaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "addedValue",
                type: "uint256",
            },
        ],
        name: "increaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_address",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "mockMint",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610a3c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80633950935111610076578063a457c2d71161005b578063a457c2d714610181578063a9059cbb14610194578063dd62ed3e146101a757600080fd5b8063395093511461013857806370a082311461014b57600080fd5b806323b872dd116100a757806323b872dd146100fd5780632e72102f14610110578063378934b41461012557600080fd5b8063095ea7b3146100c357806318160ddd146100eb575b600080fd5b6100d66100d13660046107a4565b6101ed565b60405190151581526020015b60405180910390f35b6002545b6040519081526020016100e2565b6100d661010b3660046107ce565b610204565b61012361011e366004610856565b610262565b005b6101236101333660046107a4565b61037a565b6100d66101463660046107a4565b610388565b6100ef6101593660046108da565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661018f3660046107a4565b6103cb565b6100d66101a23660046107a4565b61040e565b6100ef6101b53660046108f5565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60006101fa33848461041b565b5060015b92915050565b60006102118484846104ca565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461025891869161025390866105b4565b61041b565b5060019392505050565b60005b818110156103725785858281811061027f5761027f610928565b905060200201602081019061029491906108da565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858585858181106102c2576102c2610928565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff909416600485015260200291909101356024830152506044016020604051808303816000875af115801561033b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035f9190610957565b508061036a816109a8565b915050610265565b505050505050565b6103848282610639565b5050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916101fa91859061025390866106fb565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916101fa91859061025390866105b4565b60006101fa3384846104ca565b73ffffffffffffffffffffffffffffffffffffffff821661043b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff831661045b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff82166104ea57600080fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205461051a90826105b4565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461055690826106fb565b73ffffffffffffffffffffffffffffffffffffffff8381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016104bd565b600082821115610625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f536166654d617468237375623a20554e444552464c4f5700000000000000000060448201526064015b60405180910390fd5b600061063183856109e0565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff821661065957600080fd5b60025461066690826106fb565b60025573ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205461069990826106fb565b73ffffffffffffffffffffffffffffffffffffffff8316600081815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60008061070883856109f3565b905083811015610774576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f536166654d617468236164643a204f564552464c4f5700000000000000000000604482015260640161061c565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461079f57600080fd5b919050565b600080604083850312156107b757600080fd5b6107c08361077b565b946020939093013593505050565b6000806000606084860312156107e357600080fd5b6107ec8461077b565b92506107fa6020850161077b565b9150604084013590509250925092565b60008083601f84011261081c57600080fd5b50813567ffffffffffffffff81111561083457600080fd5b6020830191508360208260051b850101111561084f57600080fd5b9250929050565b60008060008060006060868803121561086e57600080fd5b853567ffffffffffffffff8082111561088657600080fd5b61089289838a0161080a565b90975095508591506108a66020890161077b565b945060408801359150808211156108bc57600080fd5b506108c98882890161080a565b969995985093965092949392505050565b6000602082840312156108ec57600080fd5b6107748261077b565b6000806040838503121561090857600080fd5b6109118361077b565b915061091f6020840161077b565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561096957600080fd5b8151801515811461077457600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109d9576109d9610979565b5060010190565b818103818111156101fe576101fe610979565b808201808211156101fe576101fe61097956fea264697066735822122074c2eae5a2387c57e5a12230f1c90577b8fab5937644cea75af9c529a239f10364736f6c63430008120033";
const isSuperArgs = (xs) => xs.length > 1;
export class ERC20Mock__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
ERC20Mock__factory.bytecode = _bytecode;
ERC20Mock__factory.abi = _abi;
